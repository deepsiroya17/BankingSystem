-- *************** TRIGGERS *****************/

CREATE OR REPLACE TRIGGER TRG_CUST_BALANCE 
BEFORE INSERT OR UPDATE ON ACCOUNT
FOR EACH ROW
BEGIN
 DBMS_OUTPUT.PUT_LINE ('Account no: ' || :OLD.ACC_NO);
 DBMS_OUTPUT.PUT_LINE ('Old Balance of employee ' || :OLD.BALANCE);
 DBMS_OUTPUT.PUT_LINE ('New Balance of employee ' || :NEW.BALANCE);
 DBMS_OUTPUT.PUT_LINE ('                                        ');
END;
/


CREATE OR REPLACE TRIGGER TRG_CHECK_MANAGER 
BEFORE INSERT ON EMPLOYEE
FOR EACH ROW
DECLARE 
TITLE VARCHAR2 (50);
BID INT;
EMP_COUNT NUMBER;
BEGIN
        
    TITLE := :NEW.POSITION;
    BID := :NEW.BRANCH_ID;
    IF TITLE = 'MANAGER'
        THEN
            SELECT COUNT (*) INTO EMP_COUNT
            FROM EMPLOYEE
            WHERE BRANCH_ID = BID AND POSITION = 'MANAGER';
                            
        IF EMP_COUNT = 1
            THEN DBMS_OUTPUT.PUT_LINE ('A MANAGER IS ALREADY ASSIGNED TO BRANCH ID ' || BID);
        ELSE INSERT INTO EMPLOYEE (EMP_ID, BRANCH_ID, FNAME, LNAME, STREET, CITY, STATE, ZIPCODE, POSITION, MOB_NO, EMAIL, GENDER, SSN, DATE_OF_BIRTH, JOINING_DATE) 
            VALUES (:NEW.EMP_ID, :NEW.BRANCH_ID, :NEW.FNAME, :NEW.LNAME, :NEW.STREET, :NEW.CITY, :NEW.STATE, :NEW.ZIPCODE, :NEW.POSITION, :NEW.MOB_NO, :NEW.EMAIL, :NEW.GENDER, :NEW.SSN, :NEW.DATE_OF_BIRTH, :NEW.JOINING_DATE);
        END IF;
    
    END IF;
COMMIT;
END;
/