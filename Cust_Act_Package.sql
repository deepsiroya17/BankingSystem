CREATE OR REPLACE PACKAGE CUST_ACT_PK AS
	
	PROCEDURE CHECK_LAST_FIVE_TRANSACTION(A_ACC_NO TRANSACTION.PRI_ACC_NO%TYPE);
    PROCEDURE BANK_STATEMENT(C_ACC_NO TRANSACTION.PRI_ACC_NO%TYPE, 
        START_DATE TRANSACTION.TRANS_DATE%TYPE, 
        END_DATE TRANSACTION.TRANS_DATE%TYPE);
    PROCEDURE UPDATE_CUST_CONTACT_DETAILS(C_CUST_ID CUSTOMER.CUST_ID%TYPE, 
        C_EMAIL CUSTOMER.EMAIL%TYPE, 
        C_MOB_NO CUSTOMER.MOB_NO%TYPE);
END;
/


CREATE OR REPLACE PACKAGE BODY CUST_ACT_PK 
AS

PROCEDURE CHECK_LAST_FIVE_TRANSACTION(A_ACC_NO IN TRANSACTION.PRI_ACC_NO%TYPE) 
AS
CURSOR CUS_FIVE_TRANS IS 
    SELECT TRANS_ID, PRI_ACC_NO, TRANS_TYPE, TRANS_DATE, AMOUNT, DEBIT_CREDIT_FLAG FROM DB_ADMIN.TRANSACTION 
    WHERE PRI_ACC_NO = A_ACC_NO 
    ORDER BY TRANS_DATE DESC 
    FETCH FIRST 5 ROWS ONLY;
    
TYPE TRANS_REC IS RECORD (
    TRANS_ID TRANSACTION.TRANS_ID%TYPE, 
    PRI_ACC_NO TRANSACTION.PRI_ACC_NO%TYPE, 
    TRANS_TYPE TRANSACTION.TRANS_TYPE%TYPE, 
    TRANS_DATE TRANSACTION.TRANS_DATE%TYPE, 
    AMOUNT TRANSACTION.AMOUNT%TYPE, 
    DEBIT_CREDIT_FLAG TRANSACTION.DEBIT_CREDIT_FLAG%TYPE
);

T_TRANS_REC TRANS_REC;
BEGIN 	
    OPEN CUS_FIVE_TRANS;
	LOOP
        FETCH CUS_FIVE_TRANS INTO T_TRANS_REC;
        --DBMS_OUTPUT.PUT_LINE (is_open);
        EXIT WHEN CUS_FIVE_TRANS%NOTFOUND;
        DBMS_OUTPUT.PUT_LINE('TRANSACTION DETAILS -> ID -> '||T_TRANS_REC.TRANS_ID||' -> ACCOUNT_NO ->'||T_TRANS_REC.PRI_ACC_NO||' -> TRANS_TYPE -> '||T_TRANS_REC.TRANS_TYPE||' -> TRANS_DATE -> '||T_TRANS_REC.TRANS_DATE||' -> AMOUNT -> '||T_TRANS_REC.AMOUNT||' -> CREDIT_DEBIT -> '||T_TRANS_REC.DEBIT_CREDIT_FLAG);
    END LOOP;
END CHECK_LAST_FIVE_TRANSACTION;

----------------------------------------------------------------
PROCEDURE BANK_STATEMENT(C_ACC_NO IN TRANSACTION.PRI_ACC_NO%TYPE, 
    START_DATE IN TRANSACTION.TRANS_DATE%TYPE, 
    END_DATE IN TRANSACTION.TRANS_DATE%TYPE) 
AS
CURSOR CUS_TRANS IS 
    SELECT TRANS_ID, PRI_ACC_NO, TRANS_TYPE, TRANS_DATE, AMOUNT, DEBIT_CREDIT_FLAG FROM DB_ADMIN.TRANSACTION 
    WHERE PRI_ACC_NO = C_ACC_NO 
    AND TRANS_DATE BETWEEN START_DATE AND END_DATE
    ORDER BY TRANS_DATE DESC;
    
TYPE TRANS_REC IS RECORD (
    TRANS_ID TRANSACTION.TRANS_ID%TYPE, 
    PRI_ACC_NO TRANSACTION.PRI_ACC_NO%TYPE, 
    TRANS_TYPE TRANSACTION.TRANS_TYPE%TYPE, 
    TRANS_DATE TRANSACTION.TRANS_DATE%TYPE, 
    AMOUNT TRANSACTION.AMOUNT%TYPE, 
    DEBIT_CREDIT_FLAG TRANSACTION.DEBIT_CREDIT_FLAG%TYPE
);

T_TRANS_REC TRANS_REC;
BEGIN 	
    OPEN CUS_TRANS;
	LOOP
        FETCH CUS_TRANS INTO T_TRANS_REC;
        --DBMS_OUTPUT.PUT_LINE (is_open);
        EXIT WHEN CUS_TRANS%NOTFOUND;
        DBMS_OUTPUT.PUT_LINE('TRANSACTION DETAILS -> ID -> '||T_TRANS_REC.TRANS_ID||' -> ACCOUNT_NO ->'||T_TRANS_REC.PRI_ACC_NO||' -> TRANS_TYPE -> '||T_TRANS_REC.TRANS_TYPE||' -> TRANS_DATE -> '||T_TRANS_REC.TRANS_DATE||' -> AMOUNT -> '||T_TRANS_REC.AMOUNT||' -> CREDIT_DEBIT -> '||T_TRANS_REC.DEBIT_CREDIT_FLAG);
    END LOOP;
END BANK_STATEMENT;

PROCEDURE UPDATE_CUST_CONTACT_DETAILS(C_CUST_ID IN CUSTOMER.CUST_ID%TYPE, 
    C_EMAIL IN CUSTOMER.EMAIL%TYPE, 
    C_MOB_NO IN CUSTOMER.MOB_NO%TYPE) 
AS
BEGIN
    UPDATE CUSTOMER
    SET EMAIL = C_EMAIL, MOB_NO = C_MOB_NO
    WHERE CUST_ID = C_CUST_ID;
END UPDATE_CUST_CONTACT_DETAILS;

END CUST_ACT_PK;
/